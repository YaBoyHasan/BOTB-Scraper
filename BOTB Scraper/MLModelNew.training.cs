﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace BOTB_Scraper
{
    public partial class MLModelNew
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"JudgesSelectionX", @"JudgesSelectionX"),new InputOutputColumnPair(@"LeftPlayerLeftEyeX", @"LeftPlayerLeftEyeX"),new InputOutputColumnPair(@"LeftPlayerLeftEyeY", @"LeftPlayerLeftEyeY"),new InputOutputColumnPair(@"LeftPlayerRightEyeX", @"LeftPlayerRightEyeX"),new InputOutputColumnPair(@"LeftPlayerRightEyeY", @"LeftPlayerRightEyeY"),new InputOutputColumnPair(@"RightPlayerLeftEyeX", @"RightPlayerLeftEyeX"),new InputOutputColumnPair(@"RightPlayerLeftEyeY", @"RightPlayerLeftEyeY"),new InputOutputColumnPair(@"RightPlayerRightEyeX", @"RightPlayerRightEyeX"),new InputOutputColumnPair(@"RightPlayerRightEyeY", @"RightPlayerRightEyeY")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"JudgesSelectionX",@"LeftPlayerLeftEyeX",@"LeftPlayerLeftEyeY",@"LeftPlayerRightEyeX",@"LeftPlayerRightEyeY",@"RightPlayerLeftEyeX",@"RightPlayerLeftEyeY",@"RightPlayerRightEyeX",@"RightPlayerRightEyeY"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=6,MinimumExampleCountPerLeaf=13,NumberOfIterations=4,MaximumBinCountPerFeature=894,LearningRate=1F,LabelColumnName=@"JudgesSelectionY",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=1F,FeatureFraction=1F,L1Regularization=2.05476435028931E-09F,L2Regularization=0.000418359902613302F}}));

            return pipeline;
        }
    }
}
